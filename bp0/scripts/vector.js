import{Block,BlockPermutation,world}from"@minecraft/server";export class Vector{constructor(t,e,a){this.x=t,this.y=e,this.z=a}static add(t,e){return new Vector(t.x+e.x,t.y+e.y,t.z+e.z)}static subtract(t,e){return{x:(t.x??0)-(e.x??0),y:(t.y??0)-(e.y??0),z:(t.z??0)-(e.z??0)}}static distance(t,e){const a=t.x-e.x,c=t.y-e.y,r=t.z-e.z;return Math.hypot(a,c,r)}static multiply(t,e){return"number"==typeof e?{x:t.x*e,y:t.y*e,z:t.z*e}:{x:t.x*e.x,y:t.y*e.y,z:t.z*e.z}}static magnitude(t){return Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)}static normalize(t){const e=Vector.magnitude(t);return{x:t.x/e,y:t.y/e,z:t.z/e}}static cross(t,e){return{x:t.y*e.z-t.z*e.y,y:t.x*e.z-t.z*e.x,z:t.x*e.y-t.y*e.x}}static getBlockLocalCoord(t,e,a){let c=t.permutation;a&&(c=a);let r=c.getState("facing_direction");if(!r){const t=c.getState("minecraft:facing_direction");if(t)r=t;else{const t=c.getState("minecraft:cardinal_direction");if(t)switch(t){case"north":r=2;break;case"south":r=3;break;case"west":r=4;break;case"east":r=5}else r=3}}let i=0,o=0,s=0;switch(r){case 0:i=e.x??0,o=-e.y??0,s=e.z??0;break;case 1:case 3:i=e.x??0,o=e.y??0,s=e.z??0;break;case 2:i=-e.x??0,o=e.y??0,s=-e.z??0;break;case 4:i=-e.z??0,o=e.y??0,s=e.x??0;break;case 5:i=e.z??0,o=e.y??0,s=-e.x??0}return{x:i+t.location.x,y:o+t.location.y,z:s+t.location.z,localX:i,localY:o,localZ:s}}static getLocalCoords(t,e){if(1==t.isValid()){const a=t?.getViewDirection(),c=this.normalize(new Vector(a.z,0,-a.x)),r=this.normalize(this.cross(c,a)),i={x:(e.x??0)*c.x+(e.y??0)*r.x+(e.z??0)*a.x,y:(e.x??0)*c.y+(e.y??0)*r.y+(e.z??0)*a.y,z:(e.x??0)*c.z+(e.y??0)*r.z+(e.z??0)*a.z},o=this.add(t.location,i);return{x:o.x,y:o.y,z:o.z,localX:i.x,localY:i.y,localZ:i.z}}}}